// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a MainNavigator component When it is rendered And the user is authenticated Then should match the snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNCSafeAreaProvider
        onInsetsChange={[Function]}
        style={
          Array [
            Object {
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              />
              <View
                accessibilityElementsHidden={false}
                closing={false}
                gestureVelocityImpact={0.3}
                importantForAccessibility="auto"
                onClose={[Function]}
                onGestureBegin={[Function]}
                onGestureCanceled={[Function]}
                onGestureEnd={[Function]}
                onOpen={[Function]}
                onTransition={[Function]}
                pointerEvents="box-none"
                style={
                  Array [
                    Object {
                      "display": "flex",
                      "overflow": undefined,
                    },
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                  ]
                }
                transitionSpec={
                  Object {
                    "close": Object {
                      "animation": "spring",
                      "config": Object {
                        "damping": 500,
                        "mass": 3,
                        "overshootClamping": true,
                        "restDisplacementThreshold": 10,
                        "restSpeedThreshold": 10,
                        "stiffness": 1000,
                      },
                    },
                    "open": Object {
                      "animation": "spring",
                      "config": Object {
                        "damping": 500,
                        "mass": 3,
                        "overshootClamping": true,
                        "restDisplacementThreshold": 10,
                        "restSpeedThreshold": 10,
                        "stiffness": 1000,
                      },
                    },
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  pointerEvents="box-none"
                  style={
                    Object {
                      "flex": 1,
                      "marginTop": 0,
                    }
                  }
                >
                  <View
                    enableTrackpadTwoFingerGesture={true}
                    enabled={false}
                    hitSlop={
                      Object {
                        "right": -700,
                      }
                    }
                    maxDeltaY={20}
                    minOffsetX={5}
                    onHandlerStateChange={[Function]}
                  >
                    <View
                      needsOffscreenAlphaCompositing={true}
                      style={
                        Object {
                          "flex": 1,
                          "opacity": 1,
                          "transform": Array [
                            Object {
                              "translateY": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "overflow": "hidden",
                            },
                            Array [
                              Object {
                                "backgroundColor": "rgb(242, 242, 242)",
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                              "flexDirection": "column-reverse",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "flex": 1,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <View
                                    pointerEvents="auto"
                                    style={
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "overflow": "hidden",
                                        },
                                        Array [
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          },
                                          Object {
                                            "zIndex": 0,
                                          },
                                        ],
                                      ]
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      pointerEvents="auto"
                                      removeClippedSubviews={false}
                                      style={
                                        Object {
                                          "flex": 1,
                                        }
                                      }
                                    >
                                      <View
                                        accessibilityElementsHidden={false}
                                        importantForAccessibility="auto"
                                        style={
                                          Array [
                                            Object {
                                              "backgroundColor": "rgb(242, 242, 242)",
                                              "flex": 1,
                                            },
                                            Array [
                                              Object {
                                                "flex": 1,
                                                "flexDirection": "column-reverse",
                                              },
                                              undefined,
                                            ],
                                          ]
                                        }
                                      >
                                        <View
                                          style={
                                            Object {
                                              "flex": 1,
                                            }
                                          }
                                        >
                                          <RCTSafeAreaView
                                            emulateUnlessSupported={true}
                                          >
                                            <View
                                              style={
                                                Object {
                                                  "alignItems": "flex-end",
                                                  "backgroundColor": "#F5F5F5",
                                                }
                                              }
                                            >
                                              <View
                                                style={
                                                  Object {
                                                    "alignItems": "center",
                                                    "backgroundColor": "#D9D8C4",
                                                    "borderBottomLeftRadius": 25,
                                                    "justifyContent": "center",
                                                    "padding": 10,
                                                    "width": "100%",
                                                  }
                                                }
                                              >
                                                <IconMock
                                                  height={45}
                                                  width={45}
                                                />
                                              </View>
                                              <View
                                                style={
                                                  Object {
                                                    "height": 0,
                                                  }
                                                }
                                              >
                                                <View
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#D9D8C4",
                                                      "height": 20,
                                                      "width": 20,
                                                    }
                                                  }
                                                >
                                                  <View
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#F5F5F5",
                                                        "borderTopRightRadius": 25,
                                                        "height": 20,
                                                        "width": 20,
                                                      }
                                                    }
                                                  />
                                                </View>
                                              </View>
                                            </View>
                                          </RCTSafeAreaView>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "#FFFFFF",
                                      "flexDirection": "row",
                                      "height": 60,
                                      "justifyContent": "space-around",
                                    }
                                  }
                                >
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    nativeID="animatedComponent"
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#F5F5F5",
                                        "borderRadius": 50,
                                        "height": 57,
                                        "justifyContent": "center",
                                        "opacity": 1,
                                        "width": 57,
                                      }
                                    }
                                    testID="homeButton"
                                  >
                                    <IconMock
                                      height={30}
                                      width={30}
                                    />
                                    <Text
                                      style={
                                        Object {
                                          "color": "#3E3C37",
                                          "fontSize": 12,
                                        }
                                      }
                                    >
                                      home
                                    </Text>
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    nativeID="animatedComponent"
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "height": 57,
                                        "justifyContent": "center",
                                        "opacity": 1,
                                        "width": 57,
                                      }
                                    }
                                    testID="followingButton"
                                  >
                                    <IconMock
                                      height={30}
                                      width={30}
                                    />
                                    <Text
                                      style={
                                        Object {
                                          "color": "#3E3C37",
                                          "fontSize": 12,
                                        }
                                      }
                                    >
                                      following
                                    </Text>
                                  </View>
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#FFFFFF",
                                        "borderRadius": 50,
                                        "elevation": 2,
                                        "height": 60,
                                        "justifyContent": "center",
                                        "position": "relative",
                                        "top": -10,
                                        "width": 60,
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                    >
                                      <View
                                        accessible={true}
                                        focusable={true}
                                        onClick={[Function]}
                                        onResponderGrant={[Function]}
                                        onResponderMove={[Function]}
                                        onResponderRelease={[Function]}
                                        onResponderTerminate={[Function]}
                                        onResponderTerminationRequest={[Function]}
                                        onStartShouldSetResponder={[Function]}
                                        testID="openMenuButton"
                                      >
                                        <View
                                          ctx={
                                            Object {
                                              "menuActions": Object {
                                                "_getOpenedMenu": [Function],
                                                "_notify": [Function],
                                                "closeMenu": [Function],
                                                "isMenuOpen": [Function],
                                                "openMenu": [Function],
                                                "toggleMenu": [Function],
                                              },
                                              "menuRegistry": Object {
                                                "getAll": [Function],
                                                "getMenu": [Function],
                                                "setOptionsCustomStyles": [Function],
                                                "subscribe": [Function],
                                                "unsubscribe": [Function],
                                                "updateLayoutInfo": [Function],
                                              },
                                            }
                                          }
                                          style={
                                            Array [
                                              undefined,
                                              undefined,
                                            ]
                                          }
                                        >
                                          <Text
                                            style={
                                              Object {
                                                "color": "#3E3C37",
                                                "fontSize": 30,
                                                "height": 60,
                                                "lineHeight": 60,
                                                "textAlign": "center",
                                                "width": 60,
                                              }
                                            }
                                          >
                                            +
                                          </Text>
                                        </View>
                                      </View>
                                    </View>
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    nativeID="animatedComponent"
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "height": 57,
                                        "justifyContent": "center",
                                        "opacity": 1,
                                        "width": 57,
                                      }
                                    }
                                    testID="shelfButton"
                                  >
                                    <IconMock
                                      height={30}
                                      width={30}
                                    />
                                    <Text
                                      style={
                                        Object {
                                          "color": "#3E3C37",
                                          "fontSize": 12,
                                        }
                                      }
                                    >
                                      shelf
                                    </Text>
                                  </View>
                                  <View
                                    accessible={true}
                                    collapsable={false}
                                    focusable={true}
                                    nativeID="animatedComponent"
                                    onClick={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "height": 57,
                                        "justifyContent": "center",
                                        "opacity": 1,
                                        "width": 57,
                                      }
                                    }
                                    testID="profileButton"
                                  >
                                    <IconMock
                                      height={30}
                                      width={30}
                                    />
                                    <Text
                                      style={
                                        Object {
                                          "color": "#3E3C37",
                                          "fontSize": 12,
                                        }
                                      }
                                    >
                                      profile
                                    </Text>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            pointerEvents="box-none"
            style={
              Object {
                "height": 44,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": 1,
              }
            }
          />
        </View>
      </RNCSafeAreaProvider>
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Given a MainNavigator component When it is rendered And the user is not authenticated Then should match the snapshot 1`] = `
Array [
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "opacity": 1,
                }
              }
            />
            <View
              accessibilityElementsHidden={false}
              closing={false}
              gestureVelocityImpact={0.3}
              importantForAccessibility="auto"
              onClose={[Function]}
              onGestureBegin={[Function]}
              onGestureCanceled={[Function]}
              onGestureEnd={[Function]}
              onOpen={[Function]}
              onTransition={[Function]}
              pointerEvents="box-none"
              style={
                Array [
                  Object {
                    "display": "flex",
                    "overflow": undefined,
                  },
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
              transitionSpec={
                Object {
                  "close": Object {
                    "animation": "spring",
                    "config": Object {
                      "damping": 500,
                      "mass": 3,
                      "overshootClamping": true,
                      "restDisplacementThreshold": 10,
                      "restSpeedThreshold": 10,
                      "stiffness": 1000,
                    },
                  },
                  "open": Object {
                    "animation": "spring",
                    "config": Object {
                      "damping": 500,
                      "mass": 3,
                      "overshootClamping": true,
                      "restDisplacementThreshold": 10,
                      "restSpeedThreshold": 10,
                      "stiffness": 1000,
                    },
                  },
                }
              }
            >
              <View
                collapsable={false}
                nativeID="animatedComponent"
                pointerEvents="box-none"
                style={
                  Object {
                    "flex": 1,
                    "marginTop": 0,
                  }
                }
              >
                <View
                  enableTrackpadTwoFingerGesture={true}
                  enabled={false}
                  hitSlop={
                    Object {
                      "right": -700,
                    }
                  }
                  maxDeltaY={20}
                  minOffsetX={5}
                  onHandlerStateChange={[Function]}
                >
                  <View
                    needsOffscreenAlphaCompositing={true}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                        ],
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "overflow": "hidden",
                          },
                          Array [
                            Object {
                              "backgroundColor": "rgb(242, 242, 242)",
                            },
                            undefined,
                          ],
                        ]
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 1,
                            "flexDirection": "column-reverse",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "flex": 1,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <RCTSafeAreaView
                              emulateUnlessSupported={true}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#D9D8C4",
                                  "display": "flex",
                                  "height": "100%",
                                  "justifyContent": "center",
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "height": 30,
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                >
                                  <IconMock
                                    height={60}
                                    width={60}
                                  />
                                </View>
                              </View>
                            </RCTSafeAreaView>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 44,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 1,
            }
          }
        />
      </View>
    </RNCSafeAreaProvider>
  </View>,
  <View
    pointerEvents="none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />,
]
`;
