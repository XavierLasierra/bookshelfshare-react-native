// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a Register component When it is rendered Then screen should match the snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#D9D8C4",
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    nativeID="animatedComponent"
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "left": 20,
        "opacity": 1,
        "position": "absolute",
        "top": 35,
        "zIndex": 1,
      }
    }
    testID="loginPageButton"
  >
    <IconMock
      height={30}
      style={
        Object {
          "transform": Array [
            Object {
              "rotateZ": "180deg",
            },
          ],
        }
      }
      width={30}
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "height": 100,
        "justifyContent": "center",
        "paddingHorizontal": 30,
      }
    }
  >
    <View
      collapsable={false}
    >
      <IconMock
        height={50}
        width={50}
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#F5F5F5",
        "borderTopRightRadius": 40,
        "display": "flex",
        "flexDirection": "column",
        "height": 600,
        "justifyContent": "space-between",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Sign up
    </Text>
    <View
      style={
        Object {
          "height": 70,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 12,
            "fontWeight": "bold",
            "transform": Array [
              Object {
                "translateX": 5,
              },
              Object {
                "translateY": 20,
              },
            ],
            "zIndex": 1,
          }
        }
      >
        username
      </Text>
      <TextInput
        onChangeText={[Function]}
        onFocus={[Function]}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#ECECEC",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 20,
            "height": "100%",
            "paddingHorizontal": 30,
            "paddingTop": 30,
          }
        }
        testID="usernameInput"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "height": 70,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 12,
            "fontWeight": "bold",
            "transform": Array [
              Object {
                "translateX": 5,
              },
              Object {
                "translateY": 20,
              },
            ],
            "zIndex": 1,
          }
        }
      >
        email
      </Text>
      <TextInput
        onChangeText={[Function]}
        onFocus={[Function]}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#ECECEC",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 20,
            "height": "100%",
            "paddingHorizontal": 30,
            "paddingTop": 30,
          }
        }
        testID="emailInput"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "height": 70,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 12,
            "fontWeight": "bold",
            "transform": Array [
              Object {
                "translateX": 5,
              },
              Object {
                "translateY": 20,
              },
            ],
            "zIndex": 1,
          }
        }
      >
        password
      </Text>
      <TextInput
        onChangeText={[Function]}
        onFocus={[Function]}
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#ECECEC",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 20,
            "height": "100%",
            "paddingHorizontal": 30,
            "paddingTop": 30,
          }
        }
        testID="passwordInput"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "height": 70,
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 12,
            "fontWeight": "bold",
            "transform": Array [
              Object {
                "translateX": 5,
              },
              Object {
                "translateY": 20,
              },
            ],
            "zIndex": 1,
          }
        }
      >
        repeat password
      </Text>
      <TextInput
        onChangeText={[Function]}
        onFocus={[Function]}
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "borderColor": "#ECECEC",
            "borderRadius": 10,
            "borderWidth": 1,
            "fontSize": 20,
            "height": "100%",
            "paddingHorizontal": 30,
            "paddingTop": 30,
          }
        }
        testID="passwordRepeatInput"
        value=""
      />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#000000",
          "borderRadius": 10,
          "display": "flex",
          "height": 70,
          "justifyContent": "center",
          "marginTop": 20,
          "opacity": 1,
          "width": "100%",
        }
      }
      testID="registerButton"
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 20,
            "fontWeight": "500",
          }
        }
      >
        Sign up
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
