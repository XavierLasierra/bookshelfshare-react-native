// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given an AddBookToUser component When it is rendered And isbn is Not found Then should match the snapshot 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "justifyContent": "space-between",
      "paddingBottom": 20,
      "paddingHorizontal": 10,
    }
  }
>
  <Text
    style={
      Object {
        "fontSize": 12,
        "textAlign": "center",
        "width": "100%",
      }
    }
  >
    Cannot save a book without isbn
  </Text>
</View>
`;

exports[`Given an AddBookToUser component When it is rendered And isbn is defined Then should match the snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 20,
          "paddingHorizontal": 10,
        }
      }
    >
      <View>
        <View
          collapsable={false}
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              ctx={
                Object {
                  "menuActions": Object {
                    "_getOpenedMenu": [Function],
                    "_notify": [Function],
                    "closeMenu": [Function],
                    "isMenuOpen": [Function],
                    "openMenu": [Function],
                    "toggleMenu": [Function],
                  },
                  "menuRegistry": Object {
                    "getAll": [Function],
                    "getMenu": [Function],
                    "setOptionsCustomStyles": [Function],
                    "subscribe": [Function],
                    "unsubscribe": [Function],
                    "updateLayoutInfo": [Function],
                  },
                }
              }
              style={
                Array [
                  undefined,
                  undefined,
                ]
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#ECECEC",
                    "borderRadius": 10,
                    "borderWidth": 1,
                    "height": 40,
                    "lineHeight": 40,
                    "textAlign": "center",
                    "width": 150,
                  }
                }
              >
                Mark as
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View>
        <View>
          <View
            collapsable={false}
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                ctx={
                  Object {
                    "menuActions": Object {
                      "_getOpenedMenu": [Function],
                      "_notify": [Function],
                      "closeMenu": [Function],
                      "isMenuOpen": [Function],
                      "openMenu": [Function],
                      "toggleMenu": [Function],
                    },
                    "menuRegistry": Object {
                      "getAll": [Function],
                      "getMenu": [Function],
                      "setOptionsCustomStyles": [Function],
                      "subscribe": [Function],
                      "unsubscribe": [Function],
                      "updateLayoutInfo": [Function],
                    },
                  }
                }
                style={
                  Array [
                    undefined,
                    undefined,
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#ECECEC",
                      "borderRadius": 10,
                      "borderWidth": 1,
                      "height": 40,
                      "lineHeight": 40,
                      "textAlign": "center",
                      "width": 150,
                    }
                  }
                >
                  Add to shelf
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      collapsable={false}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    />
  </RCTSafeAreaView>
</View>
`;
