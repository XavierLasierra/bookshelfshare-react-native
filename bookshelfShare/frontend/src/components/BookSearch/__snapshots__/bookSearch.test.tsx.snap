// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a BookSearch component When it is rendered And isbnFromCamera is empty And you change to Other page clicking otherPageButton And you click IsbnPageButton Then should match the snapshot 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F5F5F5",
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F5F5F5",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D9D8C4",
          "borderBottomLeftRadius": 25,
          "justifyContent": "center",
          "padding": 10,
          "width": "100%",
        }
      }
    >
      <IconMock
        height={45}
        width={45}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#D9D8C4",
            "height": 20,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F5F5",
              "borderTopRightRadius": 25,
              "height": 20,
              "width": 20,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Book Search
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="isbnPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          ISBN
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="otherPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Other
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          ISBN
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="isbnInput"
          value=""
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 10,
            "display": "flex",
            "height": 70,
            "justifyContent": "center",
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="searchButton"
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
              "fontWeight": "500",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Given a BookSearch component When it is rendered And isbnFromCamera is empty And you change to Other page clicking otherPageButton And you click on otherPageButton Then screen should not have changed 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F5F5F5",
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F5F5F5",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D9D8C4",
          "borderBottomLeftRadius": 25,
          "justifyContent": "center",
          "padding": 10,
          "width": "100%",
        }
      }
    >
      <IconMock
        height={45}
        width={45}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#D9D8C4",
            "height": 20,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F5F5",
              "borderTopRightRadius": 25,
              "height": 20,
              "width": 20,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Book Search
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="isbnPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          ISBN
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="otherPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Other
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          author
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="authorInput"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          title
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="titleInput"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          publisher
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="publisherInput"
          value=""
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 10,
            "display": "flex",
            "height": 70,
            "justifyContent": "center",
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="searchButton"
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
              "fontWeight": "500",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Given a BookSearch component When it is rendered And isbnFromCamera is empty And you change to Other page clicking otherPageButton Then should match the snapshot 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F5F5F5",
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F5F5F5",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D9D8C4",
          "borderBottomLeftRadius": 25,
          "justifyContent": "center",
          "padding": 10,
          "width": "100%",
        }
      }
    >
      <IconMock
        height={45}
        width={45}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#D9D8C4",
            "height": 20,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F5F5",
              "borderTopRightRadius": 25,
              "height": 20,
              "width": 20,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Book Search
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="isbnPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          ISBN
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="otherPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Other
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          author
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="authorInput"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          title
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="titleInput"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          publisher
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="publisherInput"
          value=""
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 10,
            "display": "flex",
            "height": 70,
            "justifyContent": "center",
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="searchButton"
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
              "fontWeight": "500",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Given a BookSearch component When it is rendered And isbnFromCamera is empty And you stay on ISBN page And you click on isbnPageButton while on isbnPage Then screen should not have changed 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F5F5F5",
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F5F5F5",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D9D8C4",
          "borderBottomLeftRadius": 25,
          "justifyContent": "center",
          "padding": 10,
          "width": "100%",
        }
      }
    >
      <IconMock
        height={45}
        width={45}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#D9D8C4",
            "height": 20,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F5F5",
              "borderTopRightRadius": 25,
              "height": 20,
              "width": 20,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Book Search
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="isbnPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          ISBN
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="otherPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Other
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          ISBN
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="isbnInput"
          value=""
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 10,
            "display": "flex",
            "height": 70,
            "justifyContent": "center",
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="searchButton"
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
              "fontWeight": "500",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Given a BookSearch component When it is rendered And isbnFromCamera is empty And you stay on ISBN page Then should match the snapshot 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "backgroundColor": "#F5F5F5",
      "minHeight": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F5F5F5",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#D9D8C4",
          "borderBottomLeftRadius": 25,
          "justifyContent": "center",
          "padding": 10,
          "width": "100%",
        }
      }
    >
      <IconMock
        height={45}
        width={45}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#D9D8C4",
            "height": 20,
            "width": 20,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#F5F5F5",
              "borderTopRightRadius": 25,
              "height": 20,
              "width": 20,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "padding": 30,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#3E3C37",
          "fontSize": 35,
          "fontWeight": "500",
        }
      }
    >
      Book Search
    </Text>
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginTop": 10,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#ECECEC",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="isbnPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          ISBN
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "opacity": 1,
            "paddingVertical": 15,
            "width": 150,
          }
        }
        testID="otherPageButton"
      >
        <Text
          style={
            Object {
              "fontSize": 20,
            }
          }
        >
          Other
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "height": 400,
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 12,
              "fontWeight": "bold",
              "transform": Array [
                Object {
                  "translateX": 5,
                },
                Object {
                  "translateY": 20,
                },
              ],
              "zIndex": 1,
            }
          }
        >
          ISBN
        </Text>
        <TextInput
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#ECECEC",
              "borderRadius": 10,
              "borderWidth": 1,
              "fontSize": 20,
              "height": "100%",
              "paddingHorizontal": 30,
              "paddingTop": 30,
            }
          }
          testID="isbnInput"
          value=""
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#000000",
            "borderRadius": 10,
            "display": "flex",
            "height": 70,
            "justifyContent": "center",
            "marginTop": 20,
            "opacity": 1,
            "width": "100%",
          }
        }
        testID="searchButton"
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontSize": 20,
              "fontWeight": "500",
            }
          }
        >
          Search
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
