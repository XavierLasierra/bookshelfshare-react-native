// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a UserElement component When it is rendered And the current user is in following Then should match the snapshot 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#E4FDFF",
      "borderColor": "#ECECEC",
      "borderRadius": 20,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "marginVertical": 10,
      "opacity": 1,
      "padding": 10,
      "width": 325,
    }
  }
  testID="userDetailButton"
>
  <Image
    source={
      Object {
        "uri": undefined,
      }
    }
    style={
      Object {
        "borderRadius": 100,
        "height": 75,
        "width": 75,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": 200,
      }
    }
  >
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      />
      <Text
        style={
          Object {
            "fontSize": 16,
          }
        }
      />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="deleteFollowingButton"
    >
      <IconMock
        height={30}
        width={30}
      />
    </View>
  </View>
</View>
`;

exports[`Given a UserElement component When it is rendered And the current user is not in following Then should match the snapshot 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  nativeID="animatedComponent"
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFFFFF",
      "borderColor": "#ECECEC",
      "borderRadius": 20,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "space-between",
      "marginVertical": 10,
      "opacity": 1,
      "padding": 10,
      "width": 325,
    }
  }
  testID="userDetailButton"
>
  <Image
    source={
      Object {
        "uri": undefined,
      }
    }
    style={
      Object {
        "borderRadius": 100,
        "height": 75,
        "width": 75,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "width": 200,
      }
    }
  >
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      />
      <Text
        style={
          Object {
            "fontSize": 16,
          }
        }
      />
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="addFollowingButton"
    >
      <IconMock
        height={30}
        width={30}
      />
    </View>
  </View>
</View>
`;
